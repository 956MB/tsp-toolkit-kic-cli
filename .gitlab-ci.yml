image:
  name: git.keithley.com:5050/trebuchet/teaspoon/teaspoon-build:latest
  entrypoint: [""]

include:
  # https://gitlab.com/gitlab-org/gitlab/-/tree/master/lib/gitlab/ci/templates/Workflows/MergeRequest-Pipelines.gitlab-ci.yml
  - template: Workflows/MergeRequest-Pipelines.gitlab-ci.yml


cache:
  key:
    files:
      - Cargo.lock
  paths:
    - .cargo

variables:
  CARGO_HOME: ".cargo"
  NODE_EXTRA_CA_CERTS: "/etc/ssl/certs/ca-certificates.crt"

stages:
  - style
  - lint
  - compile
  - test
  - package
  - deploy

install:
  stage: .pre
  script:
    # Print toolchain versions.
    - rustc --version && cargo --version
    - npm --version
    # Make cache targets if they don't exist already.
    - mkdir -p .cargo
    - mkdir -p target
    # Download and install/build all dependencies.
    - cargo check --release --locked

.style:
  stage: style
  when: always

style-rustfmt:
  extends: .style
  needs: []
  script:
    - cargo fmt --version
    - cargo fmt --check --verbose

.lint:
  stage: lint
  when: always

lint-clippy:
  extends: .lint
  needs:
    - install
  script:
    - cargo clippy --version
    - cargo clippy

.cargo-compile:
  stage: compile
  needs:
    - install
  script:
    - cargo build --target "$TARGET_OS" --release
  artifacts:
    paths:
      - target/$TARGET_OS/release/kic*
    exclude:
      - target/$TARGET_OS/**/*.d
      - target/$TARGET_OS/**/*.rlib

compile-windows:
  variables:
    TARGET_OS: x86_64-pc-windows-gnu
  extends: .cargo-compile

compile-linux:
  variables:
    TARGET_OS: x86_64-unknown-linux-gnu
  extends: .cargo-compile

test-linux:
  stage: test
  variables:
    RUSTFLAGS: "-Cinstrument-coverage"
    COVERAGE_DIR: "target/coverage"
    LLVM_PROFILE_FILE: "../${COVERAGE_DIR}/%p-%m.profraw"
  needs:
    - compile-linux
  before_script:
    - 'export PATH="$(pwd):${PATH}"'
  script:
    # Get the latest TSPop and extract
    #- 'curl --location --output archive.zip --header "JOB-TOKEN: $CI_JOB_TOKEN" "https://${CI_SERVER_HOST}/api/v4/projects/31/jobs/artifacts/main/download?job=deploy"'
    #- unzip archive.zip
    #- tar -xzf tsp.tar.gz
    - mkdir "${COVERAGE_DIR}"
    - cargo test --workspace -- -Z unstable-options --format json --report-time | cargo2junit > report.xml
    # Run the tests
    #- npm run test
    - grcov ${COVERAGE_DIR} --binary-path target/debug -s . -o "${COVERAGE_DIR}" --ignore-not-existing --ignore '.cargo/*' --output-types cobertura
    - "xmllint --xpath \"concat('Coverage: ', 100 * string(//coverage/@line-rate), '%')\" target/coverage/cobertura.xml"
  coverage: '/Coverage: \d+(?:\.\d+)?/'
  artifacts:
    reports:
      junit:
        - report.xml
      coverage_report:
        coverage_format: cobertura
        path: target/coverage/cobertura.xml

package:
  stage: package
  needs:
    - compile-windows
    - compile-linux
  script:
    - mkdir -p bin/
    - cp target/x86_64-pc-windows-gnu/release/kic.exe bin/kic.exe
    - cp target/x86_64-unknown-linux-gnu/release/kic bin/kic
    - npm pack
  artifacts:
    name: npm-package
    paths:
      - ./*.tgz

deploy:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - compile-windows
    - compile-linux
  script:
    - mkdir -p bin/
    - cp target/x86_64-pc-windows-gnu/release/kic.exe bin/kic.exe
    - cp target/x86_64-unknown-linux-gnu/release/kic bin/kic
    - npm config set @trebuchet:registry "https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/"
    - npm config set -- "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken" "${CI_JOB_TOKEN}"
    - npm publish

release:
  stage: deploy
  image: git.keithley.com:5050/gitlab-support/gitlab-release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - compile-linux
    - compile-windows
  script:
    - echo "release"
  release:
    tag_name: $CI_COMMIT_TAG
    name: "ki-comms $CI_COMMIT_TAG release"
    description: |
      ## :warning: Disclaimer :warning:
      This is an _alpha_ stage project and should **NOT** be used for production use-cases.
      This project is **NOT** ready for customer usage. If there is a need to use this with a customer, please contact someone from the Teaspoon team to discuss options.

      ## Features Requests / Bugs
      If you find issues or have a feature request, please enter a [new issue on GitLab](https://git.keithley.com/trebuchet/teaspoon/ki-comms/-/issues/new).
      This will allow us to filter the issues into JIRA to avoid duplicates and keep things focused.

      ## Installation
      View the installation instructions [here](https://git.keithley.com/trebuchet/teaspoon/ki-comms/-/blob/dev/README.md#installation)

      ## Added Features
      - __TBD__

      ## Known Issues
      - __TBD__

    ref: "$CI_COMMIT_TAG"
    assets:
      links:
        - name: x86_64 Windows Binary
          url: "https://${CI_SERVER_HOST}:${CI_SERVER_PORT}/api/v4/projects/${CI_PROJECT_ID}/jobs/artifacts/${CI_COMMIT_REF_NAME}/raw/target/x86_64-pc-windows-gnu/release/kic.exe?job=compile-windows"
          filepath: "/windows/kic.exe"
          link_type: other
        - name: x86_64 Linux Binary
          url: "https://${CI_SERVER_HOST}:${CI_SERVER_PORT}/api/v4/projects/${CI_PROJECT_ID}/jobs/artifacts/${CI_COMMIT_REF_NAME}/raw/target/x86_64-unknown-linux-gnu/release/kic?job=compile-linux"
          filepath: "/linux/kic"
          link_type: other


# package-linux:
#   stage: package
#   needs:
#     - compile-linux
#   script:
#     - mkdir -p bin
#     - cp target/x86_64-unknown-linux-gnu/release/kic bin/kic
#     - npm pack
#   artifacts:
#     name: linux-package
#     paths:
#       - ./*.tgz
